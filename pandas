{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c5f67a66",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1+1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "eaeb9768",
   "metadata": {},
   "outputs": [],
   "source": [
    "hi='hello there'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4761cc55",
   "metadata": {},
   "outputs": [],
   "source": [
    "pi=3.142"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c0e86fdd",
   "metadata": {},
   "outputs": [],
   "source": [
    "radius=7\n",
    "pi=22/7\n",
    "area=pi*(radius**2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3c2f96de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "153.958\n"
     ]
    }
   ],
   "source": [
    "print(area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ffa4650e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "153.958\n"
     ]
    }
   ],
   "source": [
    "radius+1\n",
    "print(area)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3c242cf2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Good morning! ezekiel\n"
     ]
    }
   ],
   "source": [
    "word='Good morning! '\n",
    "name='ezekiel'\n",
    "result=word + name\n",
    "print(result)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "30ad4fef",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Good morning! ezekiel Good morning! ezekiel Good morning! ezekiel \n"
     ]
    }
   ],
   "source": [
    "result=(word + name + ' ' ) *3\n",
    "print(result)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6f209703",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "x = 1\n",
    "word = str(x)\n",
    "print(word)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e76fc88c",
   "metadata": {},
   "outputs": [],
   "source": [
    "type = input(\"typing...\"'\\n')\n",
    "num =int(input(\"typing...\"'\\n'))\n",
    "#print((type +\" \"'\\n') * 5)\n",
    "print(5*num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "7b37e789",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a number for x: 10\n",
      "enter a number for y: 20\n",
      "x is smaller than y\n"
     ]
    }
   ],
   "source": [
    "x = float(input(\"enter a number for x: \"))\n",
    "y = float(input(\"enter a number for y: \"))\n",
    "if x == y:\n",
    "    print(\"x and y are equal\")\n",
    "    if y != 0:\n",
    "         \n",
    "        print(\"undefined function!!! \")\n",
    "    \n",
    "elif x < y:\n",
    "        print(\"x is smaller than y\")\n",
    "        \n",
    "else:\n",
    "            print(\"y is smaller\") \n",
    "            print(\"thanks\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "2200f9e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*\n",
      "*\n",
      "*\n",
      "*\n",
      "*\n"
     ]
    }
   ],
   "source": [
    "n = 0\n",
    "while n < 5: \n",
    "    print(\"*\")\n",
    "    n = n+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a98d4e78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ezekiel\n",
      "ezekiel\n",
      "ezekiel\n",
      "ezekiel\n",
      "ezekiel\n"
     ]
    }
   ],
   "source": [
    "for n in range (5):\n",
    "    print(\"ezekiel\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "dc5058f1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "2\n",
      "4\n",
      "6\n",
      "8\n",
      "10\n",
      "12\n",
      "14\n",
      "16\n",
      "18\n"
     ]
    }
   ],
   "source": [
    "x = range(0,20,2)\n",
    "for n in x:\n",
    "    print(n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "59d6d8da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24\n"
     ]
    }
   ],
   "source": [
    "\n",
    "y=0\n",
    "x = range(7,10)\n",
    "for n in x:\n",
    "    y+=n\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "6c8a66ba",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n"
     ]
    }
   ],
   "source": [
    "x = \"ezekiel\"\n",
    "y=len(x)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b602c255",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
